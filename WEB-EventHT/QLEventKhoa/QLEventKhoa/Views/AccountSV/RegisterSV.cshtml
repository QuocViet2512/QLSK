@model QLEventKhoa.ViewModels.DangKySVViewModels

@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_LayoutSV.cshtml";
}




<section>
    <div class="tr-register">
        <div class="tr-regi-form">
            <h4>Tạo tài khoản</h4>
            @if (TempData["Temp"] != null)
            {
                <h5>@TempData["Temp"]</h5>
            }
            @using (Html.BeginForm("RegisterSV", "AccountSV", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <div class="row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.maSV, new { htmlAttributes = new { @class = "validate", placeholder = "Mã số sinh viên", @maxlength = "10", required = "required" } })

                                @Html.ValidationMessageFor(model => model.maSV, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.tenSV, new { htmlAttributes = new { @class = "validate", placeholder = "Họ và tên sinh viên", required = "required" } })
                                @Html.ValidationMessageFor(model => model.tenSV, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.emailSV, new { htmlAttributes = new { @class = "validate", placeholder = "Email sinh viên", required = "required", type = "email" } })
                                @Html.ValidationMessageFor(model => model.emailSV, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.phoneSV, new { htmlAttributes = new { @class = "validate", placeholder = "Số điện thoại sinh viên", required = "required", @maxlength = "18" } })
                                @Html.ValidationMessageFor(model => model.phoneSV, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" style="font-size:13px;float:left;margin-bottom:5px;margin-left:17px">Ngày sinh sinh viên</label>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.ngaySinhSV, new { htmlAttributes = new { @class = "form-control textbox-n", placeholder = "Ngày sinh", required = "required" } })
                                @Html.ValidationMessageFor(model => model.ngaySinhSV, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @*@Html.DropDownListFor(model => model.idLopHoc, Model.LopHoc, "Vui lòng chọn lớp đang học", htmlAttributes: new { @class = "form-control", required = "SVui lòng chọn lớp đang học" })
                                    @Html.ValidationMessageFor(model => model.idLopHoc, "", new { @class = "text-danger" })*@
                                <input class="form-control" list="LopHoc" id="idLopHoc" name="idLopHoc" onchange="checkLop()" />
                                <p style="color:red" id="message"></p>
                                <datalist id="LopHoc">
                                    @foreach (var item in Model.listLop)
                                    {
                                        <option>@item.tenLopHoc</option>
                                    }
                                </datalist>

                            </div>
                        </div>
                        <script>
                            function checkLop() {
                                var idLopHoc = document.getElementById('idLopHoc').value;
                                if (idLopHoc.length < 7) {
                                    document.getElementById('message').innerText = "Chọn lớp học";
                                } else {
                                    document.getElementById('message').innerText = "";
                                }
                            }
                        </script>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.idKhoa, new SelectList(Model.listKhoa, "idKhoa", "tenKhoa"), "Vui lòng chọn Khoa đang học", htmlAttributes: new { @class = "form-control", required = "SVui lòng chọn Khoa đang học" })
                                @Html.ValidationMessageFor(model => model.idKhoa, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            <div class="col-md-12">
                                @Html.EditorFor(model => model.matKhauSV, new { htmlAttributes = new { @class = "validate", placeholder = "Nhập mật khẩu", required = "required", @maxlength = "20", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.matKhauSV, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.rePassword, new { htmlAttributes = new { @class = "validate", placeholder = "Nhập lại mật khẩu", required = "required", @type = "password" } })

                                @Html.ValidationMessageFor(model => model.rePassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="input-field col-md-12" style="padding:3px">

                            <button type="submit" id="btn-register" class="waves-effect waves-light btn-large full-btn">Đăng ký</button>
                        </div>
                    </div>

                </div>
            }
            <p>
                Bạn đã có tài khoản? <a href="@Url.Action("LoginSV","AccountSV")">   Bấm để đăng nhập</a>
            </p>
        </div>
    </div>
</section>

